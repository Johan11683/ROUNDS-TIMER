@use "sass:color";

/* üé® Variables Sass */
$bg: #0f1220;
$card: #171a2b;
$text: #e6e9f5;
$accent: #00d1b2;
$danger: #ff5a7a;
$warn: #ffb86b;
$ok: #28d17c;

/* üé® Injection en CSS vars */
:root {
  --bg: #{$bg};
  --card: #{$card};
  --text: #{$text};
  --accent: #{$accent};
  --danger: #{$danger};
  --warn: #{$warn};
  --ok: #{$ok};
  --space: clamp(10px, 2.5vw, 24px);
  --gap: clamp(10px, 2.2vw, 24px);

  /* boutons principaux un peu plus grands (toucher mobile) */
  --btn: clamp(68px, 11vw, 96px);
  --btn-fs: clamp(28px, 4vw, 40px);

  --btn-small: clamp(36px, 6vw, 48px);
  --btn-small-fs: clamp(14px, 2.8vw, 24px);

  /* hauteur unifi√©e pour les petits inputs */
  --input-h: 48px;

  /* üìè Largeur par d√©faut des champs num√©riques (4 chiffres + padding) */
  --field-w: calc(14ch + 20px);
}

* { box-sizing: border-box; }
html, body, #root { height: 100%; }
body {
  margin: 0;
  font-family: 'Bebas Neue', Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
  background: var(--bg);
  color: var(--text);
}

.app {
  min-height: 100%;
  display: grid;
  grid-template-rows: auto 1fr;
}

.app__header {
  padding: 16px 24px;
  border-bottom: 1px solid rgba(255,255,255,0.06);
  backdrop-filter: blur(6px);
  display: grid;
  place-items: center;
}

.app__header h1 {
  margin: 0;
  text-transform: uppercase;
  letter-spacing: 3px;
  font-weight: 900;
  font-size: clamp(22px, 5vw, 40px);
  background: linear-gradient(90deg, #ff3b55, #ffb86b 50%, #28d17c);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
  text-shadow: 0 2px 0 rgba(0,0,0,0.35);
}

.app__main {
  padding: var(--space);
  display: grid;
  place-items: center;
}

/* Conteneur neutre */
.card {
  background: transparent;
  border: none;
  border-radius: 0;
  box-shadow: none;
  width: 100%;
  height: 100%;
  padding: clamp(16px, 3vw, 32px);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.row { display: flex; gap: 12px; align-items: center; flex-wrap: wrap; }
.grow { flex: 1 1 200px; }

button {
  appearance: none;
  cursor: pointer;
  background: var(--accent);
  border: none;
  color: #0a0c16;
  padding: 10px 14px;
  border-radius: 10px;
  font-weight: 700;
}

.btn-icon {
  width: var(--btn);
  height: var(--btn);
  padding: 0;
  display: inline-grid;
  place-items: center;
  font-size: var(--btn-fs);
}
.btn-icon.small {
  width: var(--btn-small);
  height: var(--btn-small);
  font-size: var(--btn-small-fs);
  border-radius: 8px;
}

.btn-play { background: var(--ok); color: #0a0c16; }
.btn-pause { background: var(--warn); color: #0a0c16; }
.btn-icon:disabled { opacity: 0.5; cursor: not-allowed; }

button.secondary { background: #2b3152; color: var(--text); }
button.danger { background: var(--danger); color: #fff; }

/* =========================
   Settings : pile compacte
   ========================= */
.settings.settings--stack {
  width: clamp(260px, 70vw, 360px);
  margin-inline: auto;
  display: grid;
  justify-items: center;   /* ‚¨ÖÔ∏è centre tout le contenu */
}

/* 1) Chaque .row.compact s'affiche en colonne (un champ par ligne) */
.settings.settings--stack .row.compact {
  display: grid;
  grid-template-columns: 1fr;    /* pile verticale */
  justify-items: center;         /* ‚¨ÖÔ∏è centre les √©l√©ments de la ligne */
  row-gap: 14px;
  width: 100%;
}

/* 2) La premi√®re .row (rounds + reset) : bouton au-dessus de l‚Äôinput */
.settings.settings--stack .row.compact:first-of-type {
  grid-template-columns: 1fr;    /* une seule colonne */
  grid-auto-rows: auto;
  align-items: center;
  justify-content: center;
  justify-items: center;
  row-gap: 12px;
}
/* Positionnement vertical explicite */
.settings.settings--stack .row.compact:first-of-type .btn-reset-rounds { grid-row: 1; justify-self: center; }
.settings.settings--stack .row.compact:first-of-type .input-block { grid-row: 2; justify-self: center; }

/* === Input + Label : largeur EXACTEMENT identique === */
.input-block {
  /* largeur de r√©f√©rence ; ajuste 3ch/4ch/5ch selon ton besoin */
  --w: var(--field-w);            /* d√©fini plus haut = calc(4ch + 20px) */
  width: var(--w);                /* le parent fixe la largeur */
  display: grid;                  /* grid = simple et robuste */
  grid-template-rows: auto auto;  /* input puis label */
  justify-items: stretch;         /* enfants prennent 100% de la largeur */
  align-items: center;
  gap: 6px;
}

/* L‚Äôinput occupe exactement --w, padding + border INCLUS */
/* L‚Äôinput occupe exactement la largeur du parent */
.input-focus {
  box-sizing: border-box;
  inline-size: auto;           /* ‚úÖ largeur auto selon contenu */
  min-width: 3ch;              /* garde un minimum */
  max-width: var(--field-w);   /* pas plus large que pr√©vu */
  height: var(--input-h);
  padding: 0 6px;
  line-height: 1;
  text-align: center;
  font-size: clamp(24px, 7vw, 34px);
  font-weight: 800;

  /* ‚ùå on retire pour √©viter l'affichage "01" */
  /* font-variant-numeric: tabular-nums; */
  letter-spacing: normal;

  background: #0f1326;
  border: 1px solid #2b3152;
  border-radius: 10px;
  color: var(--text);

  -moz-appearance: textfield;
  appearance: none;
}

.input-focus::-webkit-inner-spin-button,
.input-focus::-webkit-outer-spin-button { -webkit-appearance: none; margin: 0; }

/* Le label fait EXACTEMENT la m√™me largeur que l‚Äôinput et peut aller √† la ligne */
.input-block label {
  box-sizing: border-box;         /* m√™me mod√®le que l‚Äôinput */
  inline-size: 100%;              /* = la m√™me largeur que le parent (.input-block) */
  padding: 6px 10px;
  border-radius: 6px;
  background: #2b3152;
  color: var(--text);
  font-size: .9rem;
  letter-spacing: .5px;
  text-transform: uppercase;
  font-weight: 900;
  opacity: .95;
  text-align: center;

  /* ‚ûú on RETIRE l‚Äôellipse pour ne plus tronquer (‚ÄúRO‚Ä¶‚Äù) */
  white-space: normal;            /* autorise le retour √† la ligne */
  overflow: visible;
  text-overflow: clip;

  /* (optionnel) meilleur wrapping pour mots longs */
  overflow-wrap: anywhere;
}

/* Variantes utiles si tu veux des largeurs diff√©rentes par champ :
.input-block[data-digits="3"] { --w: calc(3ch + 20px); }
.input-block[data-digits="5"] { --w: calc(5ch + 20px); }
*/


/* Bouton reset rounds : m√™me hauteur que l'input */
.btn-reset-rounds {
  height: var(--input-h);
  width: var(--input-h);
  border-radius: 10px;
  background: var(--accent);
  color: #0a0c16;
  display: grid;
  place-items: center;
  font-size: 1.2rem;
}

/* Timer */
.timer__display {
  font-variant-numeric: tabular-nums;
  display: grid;
  grid-template-columns: 1fr auto 1fr;
  align-items: end;
  font-size: 80px;
  line-height: 1;
  letter-spacing: 1px;
}
.timer__panel {
  display: grid;
  justify-items: center;
  gap: 10px;
  position: relative;
}
.panel-actions { position: absolute; right: 24px; top: 24px; display: flex; gap: 8px; z-index: 5; pointer-events: auto; }
.panel-actions .btn-icon { width: calc(var(--btn) * 0.7); height: calc(var(--btn) * 0.7); font-size: calc(var(--btn-fs) * 0.7); }
.timer__phase { opacity: 0.95; font-weight: 900; font-size: clamp(16px, 4.5vw, 48px); letter-spacing: 2px; text-align: center; }
.fullscreen .timer__phase { font-size: clamp(24px, 9vw, 96px); }
.timer__rounds { opacity: 0.8; }
.timer__circle { display: grid; place-items: center; margin: 6px 0 10px; }
.timer__circle svg { width: clamp(320px, 80vw, 560px); height: auto; }

.circular { position: relative; }
.circular.running .circular__progress { stroke: var(--danger); filter: drop-shadow(0 0 12px rgba(255,90,122,0.35)); }
.circular.paused .circular__progress { stroke: var(--ok); filter: drop-shadow(0 0 12px rgba(40,209,124,0.35)); }
.circular__center {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: clamp(62px, 12vw, 140px);
  font-weight: 800;
  letter-spacing: 2px;
  white-space: nowrap;
}
.circular__colon { opacity: 0.7; padding: 0 6px; }

.settings { display: grid; gap: 12px; margin-top: 16px; }
.custom { border-top: 1px solid rgba(255,255,255,0.06); padding-top: 10px; }
.custom__scroller { max-height: 260px; overflow: auto; display: grid; gap: 8px; padding-right: 6px; }

.custom__scroller::-webkit-scrollbar { width: 10px; }
.custom__scroller::-webkit-scrollbar-track { background: var(--bg); border-radius: 6px; }
.custom__scroller::-webkit-scrollbar-thumb { background: var(--accent); border-radius: 6px; border: 2px solid var(--bg); }
.custom__scroller::-webkit-scrollbar-thumb:hover { background: color.scale($accent, $lightness: -10%); }
.custom__scroller { scrollbar-width: thin; scrollbar-color: var(--accent) var(--bg); }

.custom__row { display: grid; grid-template-columns: auto 1fr 1fr; gap: 10px; align-items: end; background: #111428; padding: 10px; border-radius: 12px; }
.custom__row.dragging { outline: 2px dashed rgba(255,255,255,0.25); }
.custom__row .danger { padding: 0; }
.custom__row .danger.btn-icon.small { background: #55222a; color: #fff; }

.controls { display: flex; gap: calc(var(--gap) * 0.75); margin-top: 16px; flex-wrap: wrap; justify-content: center; }
.controls.controls--main { justify-content: center; gap: var(--gap); }
.fullscreen .controls.controls--main { gap: calc(var(--gap) * 1.25); }

.controls-row {
  display: flex;
  justify-content: center;
  gap: var(--gap);
  flex-wrap: wrap;
  margin-top: 16px;
}

.phase--work { outline: 2px solid color.mix($accent, #ffffff, 70%); }
.phase--rest { outline: 2px solid color.mix($danger, #ffffff, 70%); }

.fullscreen .app__main { padding: max(2vw, 10px); }
.fullscreen .card { width: 100%; height: 100%; max-width: none; display: grid; place-items: center; }
.fullscreen .timer__circle { margin: 0; }
.fullscreen .circular__center { font-size: clamp(100px, 23vw, 240px); }

@media (max-width: 640px) {
  .panel-actions { position: static; right: auto; top: auto; justify-content: center; width: 100%; margin-top: var(--gap); }
}
.fullscreen .panel-actions { position: static; right: auto; top: auto; justify-content: center; width: 100%; margin-top: var(--gap); }

@media (max-width: 320px) {
  :root {
    --btn: clamp(58px, 20vw, 72px);
    --btn-fs: clamp(22px, 7vw, 30px);
    --gap: clamp(8px, 5vw, 14px);
  }
  .timer__phase { font-size: clamp(20px, 12vw, 72px); }
}
